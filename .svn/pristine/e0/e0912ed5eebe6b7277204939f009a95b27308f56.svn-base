<?php
/**
 * Controller genrated using LaraAdmin
 * Help: http://laraadmin.com
 */

namespace App\Http\Controllers\LA;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Http\Requests;
use Auth;
use DB;
use Validator;
use Datatables;
use Collective\Html\FormFacade as Form;
use Dwij\Laraadmin\Models\Module;
use Dwij\Laraadmin\Models\ModuleFields;

use App\Models\Kibc;

class KibcsController extends Controller
{
	public $show_action = true;
	public $view_col = 'idpemda';
	public $listing_cols = ['id', 'idpemda', 'koordx', 'koordy','no_register', 'tgl_perolehan', 'dokumen_tanggal', 'dokumen_nomor', 'lokasi_tanah', 'lokasi', 'status_tanah', 'kd_bidang', 'kd_unit', 'kd_sub', 'kd_upb'];
	public $kdbidang = ['kd_bidang'];
	public $kdunit = ['kd_unit'];
	public $kdsub = ['kd_sub'];
	public $kdupb = ['kd_upb'];
	public function __construct() {
		// Field Access of Listing Columns
		if(\Dwij\Laraadmin\Helpers\LAHelper::laravel_ver() == 5.3) {
			$this->middleware(function ($request, $next) {
				$this->listing_cols = ModuleFields::listingColumnAccessScan('Kibcs', $this->listing_cols);
				return $next($request);
			});
		} else {
			$this->listing_cols = ModuleFields::listingColumnAccessScan('Kibcs', $this->listing_cols);
		}
	}
	
	/**
	 * Display a listing of the Kibcs.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function index()
	{
		$module = Module::get('Kibcs');
		//dd(Auth::user()->roles());
		if(Module::hasAccess($module->id)) {
			return View('la.kibcs.index', [
				'show_actions' => $this->show_action,
				'listing_cols' => $this->listing_cols,
				'module' => $module/* ,
				'kd_bidang'=>$this->kdbidang */
			]);
		} else {
            return redirect(config('laraadmin.adminRoute')."/");
        }
	}

	/**
	 * Show the form for creating a new kibc.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function create()
	{
		//
	}

	/**
	 * Store a newly created kibc in database.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @return \Illuminate\Http\Response
	 */
	public function store(Request $request)
	{
		if(Module::hasAccess("Kibcs", "create")) {
		
			$rules = Module::validateRules("Kibcs", $request);
			
			$validator = Validator::make($request->all(), $rules);
			
			if ($validator->fails()) {
				return redirect()->back()->withErrors($validator)->withInput();
			}
			
			$insert_id = Module::insert("Kibcs", $request);
			
			return redirect()->route(config('laraadmin.adminRoute') . '.kibcs.index');
			
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}

	/**
	 * Display the specified kibc.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function show($id)
	{				
		$kdbidang = Module::kdopd()->kd_bidang;
		$kdunit = Module::kdopd()->kd_unit;
		$kdsub = Module::kdopd()->kd_sub;
		//dd($kdbidang);
		if(Module::hasAccess("Kibcs", "view")) {
			
			$kibc = Kibc::find($id);
			if(isset($kibc->id)) {
				$module = Module::get('Kibcs');
				$module->row = $kibc;
				//dd($module->row['idpemda']);
				
				//gilang
				 $valueskap = DB::table(Module::bmd().'.Ta_KIB_C as kibc')->leftjoin(Module::bmd().'.Ta_KIBCR as kibcr','kibcr.IDPemda','=','kibc.IDPemda')
							->select('kibcr.IDPemda','kibcr.no_register','kibc.tgl_perolehan',
							'kibcr.tgl_perolehan','kibcr.harga','kibcr.tgl_dokumen','kibcr.no_dokumen',
							'kibcr.masa_manfaat','kibcr.luas_lantai','kibcr.kondisi','kibcr.Kd_Riwayat')
							->where('kibcr.IDPemda','=',$module->row['idpemda'])
							->where('kibcr.Kd_Riwayat','=',2)
							->get();
				 $valuesmut = DB::table(Module::bmd().'.Ta_KIB_C as kibc')->leftjoin(Module::bmd().'.Ta_KIBCR as kibcr','kibcr.IDPemda','=','kibc.IDPemda')
							->select('kibcr.IDPemda','kibcr.no_register','kibc.tgl_perolehan',
							'kibcr.tgl_perolehan','kibcr.harga','kibcr.tgl_dokumen','kibcr.no_dokumen',
							'kibcr.masa_manfaat','kibcr.luas_lantai','kibcr.kondisi','kibcr.Kd_Riwayat')
							->where('kibcr.IDPemda','=',$module->row['idpemda'])
							->where('kibcr.Kd_Riwayat','=',3)
							->get();
				$valuespeny = DB::table(Module::bmd().'.Ta_KIBCR as kibcr')->distinct()->join('bmd_20711R3.dbo.ta_susutc as susutc','kibcr.IDPemda','=','susutc.IDPemda')
							->select('susutc.tahun','susutc.harga',
							'susutc.nilai_susut1','susutc.nilai_susut2','susutc.akum_susut','susutc.nilai_sisa','susutc.sisa_umur')
							->where('susutc.IDPemda','=',$module->row['idpemda'])
							->get();							
					//dd($valuesmut);
				return view('la.kibcs.show', [
					'module' => $module,
					'view_col' => $this->view_col,
					'no_header' => true,
					'no_padding' => "no-padding" ,
					'valueskap' => $valueskap,
					'valuesmut' => $valuesmut,
					'valuespeny' => $valuespeny
				])->with('kibc', $kibc);
			} else {
				return view('errors.404', [
					'record_id' => $id,
					'record_name' => ucfirst("kibc"),
				]);
			}
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}

	/**
	 * Show the form for editing the specified kibc.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */ 
	public function edit($id)
	{
		if(Module::hasAccess("Kibcs", "edit")) {			
			$kibc = Kibc::find($id);
			if(isset($kibc->id)) {	
				$module = Module::get('Kibcs');
				
				$module->row = $kibc;
				
				return view('la.kibcs.edit', [
					'module' => $module,
					'view_col' => $this->view_col,
				])->with('kibc', $kibc);
			} else {
				return view('errors.404', [
					'record_id' => $id,
					'record_name' => ucfirst("kibc"),
				]);
			}
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}

	/**
	 * Update the specified kibc in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function update(Request $request, $id)
	{
		if(Module::hasAccess("Kibcs", "edit")) {
			
			$rules = Module::validateRules("Kibcs", $request, true);
			
			$validator = Validator::make($request->all(), $rules);
			
			if ($validator->fails()) {
				return redirect()->back()->withErrors($validator)->withInput();;
			}
			
			$insert_id = Module::updateRow("Kibcs", $request, $id);
			
			return redirect()->route(config('laraadmin.adminRoute') . '.kibcs.index');
			
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}

	/**
	 * Remove the specified kibc from storage.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function destroy($id)
	{
		if(Module::hasAccess("Kibcs", "delete")) {
			Kibc::find($id)->delete();
			
			// Redirecting to index() method
			return redirect()->route(config('laraadmin.adminRoute') . '.kibcs.index');
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}
	
	/**
	 * Datatable Ajax fetch
	 *
	 * @return
	 */
	public function dtajax()
	{

		//$values = DB::table('kibcs')->select($this->listing_cols)->whereNull('deleted_at');
		if(Module::sadmin()->kd_bidang == 0 || Module::admin()->kd_bidang == 99 || Module::aset()->kd_bidang == 98){
		$values = DB::table('kibcs')->leftjoin(Module::bmd().'.Ta_KIB_C as kibc','kibcs.idpemda','=','kibc.IDPemda')
				->select('kibcs.id','kibc.IDPemda','kibcs.KoordX','kibcs.KoordY','kibc.no_register',
				'kibc.tgl_perolehan','kibc.dokumen_tanggal',
				'kibc.dokumen_nomor','kibc.lokasi','kibcs.lokasi_tanah','kibc.status_tanah',
				'kibc.kd_bidang','kibc.kd_unit','kibc.kd_sub','kibc.kd_upb');		
		}else{
				$values = DB::table('kibcs')->leftjoin(Module::bmd().'.Ta_KIB_C as kibc','kibcs.idpemda','=','kibc.IDPemda')
				->select('kibcs.id','kibc.IDPemda','kibcs.KoordX','kibcs.KoordY','kibc.no_register',
				'kibc.tgl_perolehan','kibc.dokumen_tanggal',
				'kibc.dokumen_nomor','kibc.lokasi','kibcs.lokasi_tanah','kibc.status_tanah',
				'kibc.kd_bidang','kibc.kd_unit','kibc.kd_sub','kibc.kd_upb')
				->where('kibc.kd_bidang','=',Module::kdopd()->kd_bidang,'and','kibc.kd_unit','=',Module::kdopd()->kd_unit);	
		}
		$out = Datatables::of($values)->make();
		$data = $out->getData();

		$fields_popup = ModuleFields::getModuleFields('Kibcs');
		
		for($i=0; $i < count($data->data); $i++) {
			for ($j=0; $j < count($this->listing_cols); $j++) { 
				$col = $this->listing_cols[$j];
				if($fields_popup[$col] != null && starts_with($fields_popup[$col]->popup_vals, "@")) {
					$data->data[$i][$j] = ModuleFields::getFieldValue($fields_popup[$col], $data->data[$i][$j]);
				}
				if($col == $this->view_col) {
					$data->data[$i][$j] = '<a href="'.url(config('laraadmin.adminRoute') . '/kibcs/'.$data->data[$i][0]).'">'.$data->data[$i][$j].'</a>';
				}
				// else if($col == "author") {
				//    $data->data[$i][$j];
				// }
			}
			
			if($this->show_action) {
				$output = '';
				if(Module::hasAccess("Kibcs", "edit")) {
					$output .= '<a href="'.url(config('laraadmin.adminRoute') . '/kibcs/'.$data->data[$i][0].'/edit').'" class="btn btn-warning btn-xs" style="display:inline;padding:2px 5px 3px 5px;"><i class="fa fa-edit"></i></a>';
				}
				
				if(Module::hasAccess("Kibcs", "delete")) {
					$output .= Form::open(['route' => [config('laraadmin.adminRoute') . '.kibcs.destroy', $data->data[$i][0]], 'method' => 'delete', 'style'=>'display:inline']);
					$output .= ' <button class="btn btn-danger btn-xs" type="submit"><i class="fa fa-times"></i></button>';
					$output .= Form::close();
				}
				$data->data[$i][] = (string)$output;
			}
		}
		$out->setData($data);
		return $out;
	}
	
	
	
}
