<?php
/**
 * Controller genrated using LaraAdmin
 * Help: http://laraadmin.com
 */

namespace App\Http\Controllers\LA;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Http\Requests;
use Auth;
use DB;
use Validator;
use Datatables;
use Collective\Html\FormFacade as Form;
use Dwij\Laraadmin\Models\Module;
use Dwij\Laraadmin\Models\ModuleFields;

use App\Models\Kibb;

class KibbsController extends Controller
{
	public $show_action = true;
	public $view_col = 'idpemda';
	public $listing_cols = ['id', 'idpemda', 'merk', 'type', 'cc', 'tgl_perolehan', 'nomor_rangka', 'nomor_mesin', 'nomor_polisi', 'nomor_bpkb','harga','kd_bidang', 'kd_unit', 'kd_sub', 'kd_upb', 'bpkb_file','rack_no', 'storage_no','stnk_file','photo'];
	
	public function __construct() {
		// Field Access of Listing Columns
		if(\Dwij\Laraadmin\Helpers\LAHelper::laravel_ver() == 5.3) {
			$this->middleware(function ($request, $next) {
				$this->listing_cols = ModuleFields::listingColumnAccessScan('Kibbs', $this->listing_cols);
				return $next($request);
			});
		} else {
			$this->listing_cols = ModuleFields::listingColumnAccessScan('Kibbs', $this->listing_cols);
		}
	}

public function loadDatakibbs(Request $request){
	if(Module::hasAccess("kibbs", "view")) {
				$kdbidang = Module::kdopd()->kd_bidang;
				$kdunit = Module::kdopd()->kd_unit;
				$kdsub = Module::kdopd()->kd_sub;

			if ($request->ajax()) {
					$output = '';
					$query = $request->get('query');
					if ($query != '') {
						if($kdbidang == 99 || $kdbidang == 0 ){
							$data = DB::table('kibbs')->leftjoin(Module::bmd().'.Ta_KIB_B as kibb','kibbs.idpemda','=','kibb.IDPemda')
							->leftjoin('racks','racks.id','=','kibbs.rack_no')
							->leftjoin('storages','storages.id','=','racks.storage')
							->leftjoin('uploads as uploadstnk','uploadstnk.id','=','kibbs.stnk_file')
							->leftjoin('uploads as uploadphoto','uploadphoto.id','=','kibbs.photo')
							->leftjoin('uploads as uploadbpkb','uploadbpkb.id','=','kibbs.bpkb_file')
							->leftjoin('departments as dept', function ($join) {
									$join->on('dept.kd_bidang','=','kibb.kd_bidang')
											->on('dept.kd_unit','=','kibb.kd_unit')
											->on('dept.kd_sub','=','kibb.kd_sub')
											->on('dept.kd_upb','=','kibb.kd_upb');
								}
							)
							->leftjoin(Module::bmd().'.ref_kondisi as kond','kond.kd_kondisi','=','kibb.kondisi')
							->select('kibbs.id','dept.name as Dept','kibbs.IDPemda','kibb.merk','kibb.type','kibb.cc','kibb.bahan','kond.Uraian as kondisi',
							'kibb.tgl_perolehan','kibb.nomor_rangka',
							'kibb.nomor_mesin','kibb.nomor_polisi',
							'kibb.nomor_bpkb','uploadbpkb.name as bpkb_file','uploadbpkb.hash as hashbpkb','kibbs.bpkb_file as idbpkb',
							'kibbs.rack_no','storages.storage_name',
							'uploadstnk.name as stnk_file','uploadstnk.hash as hashstnk','kibbs.stnk_file as idstnk',
							'uploadphoto.name as photo','uploadphoto.hash as hashphoto','kibbs.photo as idphoto')
							->where([['kibb.kd_hapus','=',0],
								['kibb.kd_pemilik','=',12],
								['kibb.merk','LIKE','%'.$query.'%']
								])
							->orwhere([['kibb.kd_hapus','=',0],
								['kibb.kd_pemilik','=',12],
								['kibb.kd_aset81','=',2],
								['kibb.kd_aset82','=',2],
								['kibb.nomor_polisi','LIKE','%'.$query.'%']
								])
						->get();
						}else{
							$data = DB::table('kibbs')->leftjoin(Module::bmd().'.Ta_KIB_B as kibb','kibbs.idpemda','=','kibb.IDPemda')
							->leftjoin('racks','racks.id','=','kibbs.rack_no')
							->leftjoin('storages','storages.id','=','racks.storage')
							->leftjoin('uploads as uploadstnk','uploadstnk.id','=','kibbs.stnk_file')
							->leftjoin('uploads as uploadphoto','uploadphoto.id','=','kibbs.photo')
							->leftjoin('uploads as uploadbpkb','uploadbpkb.id','=','kibbs.bpkb_file')
							->leftjoin('departments as dept', function ($join) {
									$join->on('dept.kd_bidang','=','kibb.kd_bidang')
											->on('dept.kd_unit','=','kibb.kd_unit')
											->on('dept.kd_sub','=','kibb.kd_sub')
											->on('dept.kd_upb','=','kibb.kd_upb');
								}
							)
							->leftjoin(Module::bmd().'.ref_kondisi as kond','kond.kd_kondisi','=','kibb.kondisi')
							->select('kibbs.id','dept.name as Dept','kibbs.IDPemda','kibb.merk','kibb.type','kibb.cc','kibb.bahan','kond.Uraian as kondisi',
							'kibb.tgl_perolehan','kibb.nomor_rangka',
							'kibb.nomor_mesin','kibb.nomor_polisi',
							'kibb.nomor_bpkb','uploadbpkb.name as bpkb_file','uploadbpkb.hash as hashbpkb','kibbs.bpkb_file as idbpkb',
							'kibbs.rack_no','storages.storage_name',
							'uploadstnk.name as stnk_file','uploadstnk.hash as hashstnk','kibbs.stnk_file as idstnk',
							'uploadphoto.name as photo','uploadphoto.hash as hashphoto','kibbs.photo as idphoto')
							->where([['kibb.kd_hapus','=',0],
								['kibb.kd_pemilik','=',12],
								['kibb.kd_aset81','=',2],
								['kibb.kd_aset82','=',2],
								['kibb.kd_bidang','=',$kdbidang],
								['kibb.kd_unit','=',$kdunit],
								['kibb.kd_sub','='.$kdsub],
								['kibb.merk','LIKE','%'.$query.'%']
								])
							->orwhere([['kibb.kd_hapus','=',0],
								['kibb.kd_pemilik','=',12],
								['kibb.kd_aset81','=',2],
								['kibb.kd_aset82','=',2],
								['kibb.kd_bidang','=',$kdbidang],
								['kibb.kd_unit','=',$kdunit],
								['kibb.kd_sub','='.$kdsub],
								['kibb.nomor_polisi','LIKE','%'.$query.'%']
								])
						->get();	
						}
					} else {
						if($kdbidang == 99 || $kdbidang == 0 ){
							$data = DB::table('kibbs')->leftjoin(Module::bmd().'.Ta_KIB_B as kibb','kibbs.idpemda','=','kibb.IDPemda')
							->leftjoin('racks','racks.id','=','kibbs.rack_no')
							->leftjoin('storages','storages.id','=','racks.storage')
							->leftjoin('uploads as uploadstnk','uploadstnk.id','=','kibbs.stnk_file')
							->leftjoin('uploads as uploadphoto','uploadphoto.id','=','kibbs.photo')
							->leftjoin('uploads as uploadbpkb','uploadbpkb.id','=','kibbs.bpkb_file')
							->leftjoin('departments as dept', function ($join) {
									$join->on('dept.kd_bidang','=','kibb.kd_bidang')
											->on('dept.kd_unit','=','kibb.kd_unit')
											->on('dept.kd_sub','=','kibb.kd_sub')
											->on('dept.kd_upb','=','kibb.kd_upb');
								}
							)
							->leftjoin(Module::bmd().'.ref_kondisi as kond','kond.kd_kondisi','=','kibb.kondisi')
							->select('kibbs.id','dept.name as Dept','kibbs.IDPemda','kibb.merk','kibb.type','kibb.cc','kibb.bahan','kond.Uraian as kondisi',
							'kibb.tgl_perolehan','kibb.nomor_rangka',
							'kibb.nomor_mesin','kibb.nomor_polisi',
							'kibb.nomor_bpkb','uploadbpkb.name as bpkb_file','uploadbpkb.hash as hashbpkb','kibbs.bpkb_file as idbpkb',
							'kibbs.rack_no','storages.storage_name',
							'uploadstnk.name as stnk_file','uploadstnk.hash as hashstnk','kibbs.stnk_file as idstnk',
							'uploadphoto.name as photo','uploadphoto.hash as hashphoto','kibbs.photo as idphoto')
							->where([['kibb.kd_hapus','=',0],
								['kibb.kd_pemilik','=',12]
								])
						->take(10)
						->get();
						}else{
							$data = DB::table('kibbs')->leftjoin(Module::bmd().'.Ta_KIB_B as kibb','kibbs.idpemda','=','kibb.IDPemda')
							->leftjoin('racks','racks.id','=','kibbs.rack_no')
							->leftjoin('storages','storages.id','=','racks.storage')
							->leftjoin('uploads as uploadstnk','uploadstnk.id','=','kibbs.stnk_file')
							->leftjoin('uploads as uploadphoto','uploadphoto.id','=','kibbs.photo')
							->leftjoin('uploads as uploadbpkb','uploadbpkb.id','=','kibbs.bpkb_file')
							->leftjoin('departments as dept', function ($join) {
									$join->on('dept.kd_bidang','=','kibb.kd_bidang')
											->on('dept.kd_unit','=','kibb.kd_unit')
											->on('dept.kd_sub','=','kibb.kd_sub')
											->on('dept.kd_upb','=','kibb.kd_upb');
								}
							)
							->leftjoin(Module::bmd().'.ref_kondisi as kond','kond.kd_kondisi','=','kibb.kondisi')
							->select('kibbs.id','dept.name as Dept','kibbs.IDPemda','kibb.merk','kibb.type','kibb.cc','kibb.bahan','kond.Uraian as kondisi',
							'kibb.tgl_perolehan','kibb.nomor_rangka',
							'kibb.nomor_mesin','kibb.nomor_polisi',
							'kibb.nomor_bpkb','uploadbpkb.name as bpkb_file','uploadbpkb.hash as hashbpkb','kibbs.bpkb_file as idbpkb',
							'kibbs.rack_no','storages.storage_name',
							'uploadstnk.name as stnk_file','uploadstnk.hash as hashstnk','kibbs.stnk_file as idstnk',
							'uploadphoto.name as photo','uploadphoto.hash as hashphoto','kibbs.photo as idphoto')
							->where([['kibb.kd_hapus','=',0],
								['kibb.kd_pemilik','=',12],
								['kibb.kd_bidang','=',$kdbidang],
								['kibb.kd_unit','=',$kdunit],
								['kibb.kd_sub','='.$kdsub],
								['kibb.kd_upb','=',$kdupb],
								])
						->take(10)
						->get();	
						}
					}
					$total_row = count($data);
					  if($total_row > 0){
					   foreach($data as $row){
						   if(Module::hasAccess("kibbs", "edit")){
							$output .= '
							<tr>
							 <td>'.$row->id.'</td>
							 <td>'.$row->Dept.'</td>
							 <td><a href="'.url(config('laraadmin.adminRoute') . '/kibbs/'.$row->id).'">'.$row->IDPemda.'</a></td>
							 <td>'.$row->merk.'</td>
							 <td>'.$row->type.'</td>
							 <td>'.$row->cc.'</td>
							 <td>'.$row->bahan.'</td>
							 <td>'.$row->kondisi.'</td>
							 <td>'.$row->tgl_perolehan.'</td>
							 <td>'.$row->nomor_rangka.'</td>
							 <td>'.$row->nomor_mesin.'</td>
							 <td><a href="'.url(config('laraadmin.adminRoute') . '/kibbs/'.$row->id).'">'.$row->nomor_polisi.'</a></td>
							 <td>'.$row->nomor_bpkb.'</td>
							 <td><a href="'.url('/files/'.$row->hashbpkb).'/'.$row->bpkb_file.'">'.(($row->idbpkb == '' OR $row->idbpkb == '0') ? '<i class="fa fa-times btn-danger btn-xs">' : '<i class="fa fa-check btn-success btn-xs">').'</a></td>
							 <td>'.$row->rack_no.'</td>
							 <td>'.$row->storage_name.'</td>						 
							 <td><a href="'.url('/files/'.$row->hashstnk).'/'.$row->stnk_file.'">'.(($row->idbpkb == '' OR $row->idstnk == '0') ? '<i class="fa fa-times btn-danger btn-xs">' : '<i class="fa fa-check btn-success btn-xs">').'</a></td>
							 <td><a href="'.url('/files/'.$row->hashphoto).'/'.$row->photo.'">'.(($row->idbpkb == '' OR $row->idphoto == '0') ? '<i class="fa fa-times btn-danger btn-xs">' : '<i class="fa fa-check btn-success btn-xs">').'</a></td>
							 <td>
							 <a href="'.url(config('laraadmin.adminRoute') . '/kibbs/'.$row->id.'/edit').'" class="btn btn-warning btn-xs" style="display:inline;padding:2px 5px 3px 5px;"><i class="fa fa-edit"></i></a>
							 </td>
							</tr>';
						   }else{
							   $output .= '
							<tr>
							 <td>'.$row->id.'</td>
							 <td>'.$row->Dept.'</td>
							 <td>'.$row->IDPemda.'</td>
							 <td>'.$row->merk.'</td>
							 <td>'.$row->type.'</td>
							 <td>'.$row->cc.'</td>
							 <td>'.$row->bahan.'</td>
							 <td>'.$row->kondisi.'</td>
							 <td>'.$row->tgl_perolehan.'</td>
							 <td>'.$row->nomor_rangka.'</td>
							 <td>'.$row->nomor_mesin.'</td>
							 <td><a href="'.url(config('laraadmin.adminRoute') . '/kibbs/'.$row->id).'">'.$row->nomor_polisi.'</a></td>
							 <td>'.$row->nomor_bpkb.'</td>
							 <td><a href="'.url('/files/'.$row->hashbpkb).'/'.$row->bpkb_file.'">'.(($row->idbpkb == '' OR $row->idbpkb == '0') ? '<i class="fa fa-times btn-danger btn-xs">' : '<i class="fa fa-check btn-success btn-xs">').'</a></td>
							 <td>'.$row->rack_no.'</td>
							 <td>'.$row->storage_name.'</td>						 
							 <td><a href="'.url('/files/'.$row->hashstnk).'/'.$row->stnk_file.'">'.(($row->idbpkb == '' OR $row->idstnk == '0') ? '<i class="fa fa-times btn-danger btn-xs">' : '<i class="fa fa-check btn-success btn-xs">').'</a></td>
							 <td><a href="'.url('/files/'.$row->hashphoto).'/'.$row->photo.'">'.(($row->idbpkb == '' OR $row->idphoto == '0') ? '<i class="fa fa-times btn-danger btn-xs">' : '<i class="fa fa-check btn-success btn-xs">').'</a></td>
							 <td>
							 Not Authorize
							 </td>
							</tr>';
						   }
					   }
					  }else{
						   $output = '
						   <tr>
							<td align="center" colspan="5">No Data Found</td>
						   </tr>
						   ';
					  }
				  $data = array(
				   'table_data'  => $output,
				   'total_data'  => $total_row
				  );

				  echo json_encode($data);
			}
		}else{
			return view('errors.404');
		}            
    }	
	/**
	 * Display a listing of the Kibbs.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function index()
	{
		$module = Module::get('Kibbs');
		$values = DB::table('Kibbs')->leftjoin(Module::bmd().'.Ta_KIB_B as kibb','kibbs.idpemda','=','kibb.IDPemda')
				->leftjoin('dbo.racks','racks.id','=','Kibbs.rack_no')
				// ->leftjoin('storages','storages.id','=','racks.storage')
				->select('kibbs.id','kibbs.IDPemda','kibb.merk','kibb.type','kibb.cc','kibb.bahan','kibb.kondisi',
				'kibb.tgl_perolehan','kibb.nomor_rangka',
				'kibb.nomor_mesin','kibb.nomor_polisi','kibb.nomor_bpkb','kibb.harga',
				'kibb.kd_bidang','kibb.kd_unit','kibb.kd_sub','kibb.kd_upb','kibbs.bpkb_file',
				'racks.rack_name','kibbs.storage_no','kibbs.stnk_file','kibbs.photo','kibbs.updated_at')
				->whereNull('deleted_at');
		//dd($values);
		
		if(Module::hasAccess($module->id)) {
			return View('la.kibbs.index', [
				'show_actions' => $this->show_action,
				'listing_cols' => $this->listing_cols,
				'module' => $module
			]);
		} else {
            return redirect(config('laraadmin.adminRoute')."/");
        }
	}

	/**
	 * Show the form for creating a new kibb.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function create()
	{
		//
	}

	/**
	 * Store a newly created kibb in database.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @return \Illuminate\Http\Response
	 */
	public function store(Request $request)
	{
		if(Module::hasAccess("Kibbs", "create")) {
		
			$rules = Module::validateRules("Kibbs", $request);
			
			$validator = Validator::make($request->all(), $rules);
			
			if ($validator->fails()) {
				return redirect()->back()->withErrors($validator)->withInput();
			}
			
			$insert_id = Module::insert("Kibbs", $request);
			
			return redirect()->route(config('laraadmin.adminRoute') . '.kibbs.index');
			
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}

	/**
	 * Display the specified kibb.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function show($id)
	{
		if(Module::hasAccess("Kibbs", "view")) {
				$kdbidang = Module::kdopd()->kd_bidang;
				$kdunit = Module::kdopd()->kd_unit;
				$kibb = Kibb::findorfail($id);
				if($kdbidang == 99 || $kdbidang == 0 ){
					$kibbs = DB::table('kibbs')
					->leftjoin(Module::bmd().'.Ta_KIB_B as kibb','kibbs.idpemda','=','kibb.IDPemda')
					->leftjoin('racks','racks.id','=','kibbs.rack_no')
					->leftjoin('storages','storages.id','=','racks.storage')
					->leftjoin('uploads as uploadbpkb','uploadbpkb.id','=','kibbs.bpkb_file')
					->leftjoin('uploads as uploadstnk','uploadstnk.id','=','kibbs.stnk_file')
					->leftjoin('uploads as uploadphoto','uploadphoto.id','=','kibbs.photo')
					->leftjoin('users','users.id','=','kibbs.update_by')
					->select('kibbs.id','kibbs.IDPemda','kibb.merk','kibb.type','kibb.cc','kibb.bahan','kibb.kondisi',
					'kibb.tgl_perolehan','kibb.nomor_rangka',
					'kibb.nomor_mesin','kibb.nomor_polisi','kibb.nomor_bpkb','uploadbpkb.name as bpkb_file',
					'kibbs.rack_no','storages.storage_name','uploadstnk.name as stnk_file','kibbs.photo','kibbs.updated_at','users.name as update_by')
					->where([['kibb.kd_hapus','=',0],
							['kibb.kd_pemilik','=',12],
							['kibbs.id','=',$id]
							])
					->get();
				}else{
					$kibbs = DB::table('kibbs')
					->leftjoin(Module::bmd().'.Ta_KIB_B as kibb','kibbs.idpemda','=','kibb.IDPemda')
					->leftjoin('racks','racks.id','=','kibbs.rack_no')
					->leftjoin('storages','storages.id','=','racks.storage')
					->leftjoin('uploads as uploadbpkb','uploadbpkb.id','=','kibbs.bpkb_file')
					->leftjoin('uploads as uploadstnk','uploadstnk.id','=','kibbs.stnk_file')
					->leftjoin('uploads as uploadphoto','uploadphoto.id','=','kibbs.photo')
					->leftjoin('users','users.id','=','kibbs.update_by')
					->select('kibbs.id','kibbs.IDPemda','kibb.merk','kibb.type','kibb.cc','kibb.bahan','kibb.kondisi',
					'kibb.tgl_perolehan','kibb.nomor_rangka',
					'kibb.nomor_mesin','kibb.nomor_polisi','kibb.nomor_bpkb','uploadbpkb.name as bpkb_file',
					'kibbs.rack_no','storages.storage_name','uploadstnk.name as stnk_file','kibbs.photo','kibbs.updated_at','users.name as update_by')
					->where([['kibb.kd_hapus','=',0],
							['kibb.kd_pemilik','=',12],
							['kibb.kd_bidang','=',$kdbidang],
							['kibb.kd_unit','=',$kdunit],
							['kibbs.id','=',$id]							
							])
					->get();
				}
			
			 
			if(isset($kibb->id)) {
				$module = Module::get('Kibbs');
				$module->row = $kibb;
				
				return view('la.kibbs.show', [
					'module' => $module,
					'kibbs' => $kibbs,
					'view_col' => $this->view_col,
					'no_header' => true,
					'no_padding' => "no-padding"
				])->with('kibb', $kibb);
			} else {
				return view('errors.404', [
					'record_id' => $id,
					'record_name' => ucfirst("kibb"),
				]);
			}
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}

	/**
	 * Show the form for editing the specified kibb.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function edit($id)
	{
		if(Module::hasAccess("Kibbs", "edit")) {			
			$kibb = Kibb::find($id);
			if(isset($kibb->id)) {	
				$module = Module::get('Kibbs');
				
				$module->row = $kibb;
				
				return view('la.kibbs.edit', [
					'module' => $module,
					'view_col' => $this->view_col,
				])->with('kibb', $kibb);
			} else {
				return view('errors.404', [
					'record_id' => $id,
					'record_name' => ucfirst("kibb"),
				]);
			}
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}

	/**
	 * Update the specified kibb in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function update(Request $request, $id)
	{
		if(Module::hasAccess("Kibbs", "edit")) {
			
			$rules = Module::validateRules("Kibbs", $request, true);
			
			$validator = Validator::make($request->all(), $rules);
			
			if ($validator->fails()) {
				return redirect()->back()->withErrors($validator)->withInput();;
			}
			
			$insert_id = Module::updateRow("Kibbs", $request, $id);
			
			return redirect()->route(config('laraadmin.adminRoute') . '.kibbs.index');
			
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}

	/**
	 * Remove the specified kibb from storage.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function destroy($id)
	{
		if(Module::hasAccess("Kibbs", "delete")) {
			Kibb::find($id)->delete();
			
			// Redirecting to index() method
			return redirect()->route(config('laraadmin.adminRoute') . '.kibbs.index');
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}
	
	/**
	 * Datatable Ajax fetch
	 *
	 * @return
	 */
	public function dtajax(){
		$kdbidang = Module::kdopd()->kd_bidang;
		$kdunit = Module::kdopd()->kd_unit;

				if($kdbidang == 99 || $kdbidang == 0 ){
				$values = DB::table('kibbs')->leftjoin(Module::bmd().'.Ta_KIB_B as kibb','kibbs.idpemda','=','kibb.IDPemda')
				->leftjoin('racks','racks.id','=','kibbs.rack_no')
				->leftjoin('storages','storages.id','=','racks.storage')
				->leftjoin('uploads as uploadbpkb','uploadbpkb.id','=','kibbs.bpkb_file')
				->leftjoin('uploads as uploadstnk','uploadstnk.id','=','kibbs.stnk_file')
				->leftjoin('uploads as uploadphoto','uploadphoto.id','=','kibbs.photo')
				->leftjoin('users','users.id','=','kibbs.update_by')
				->select('kibbs.id','kibbs.IDPemda','kibb.merk','kibb.type','kibb.cc',
				'kibb.tgl_perolehan','kibb.nomor_rangka',
				'kibb.nomor_mesin','kibb.nomor_polisi','kibb.nomor_bpkb','kibb.harga',
				'kibb.kd_bidang','kibb.kd_unit','kibb.kd_sub','kibb.kd_upb','uploadbpkb.name as bpkb_file',
				'kibbs.rack_no','storages.storage_name as storage_no','uploadstnk.name as stnk_file','uploadphoto.name as photo')
				->where([['kibb.kd_hapus','=',0],
						['kibb.kd_pemilik','=',12]
						]);
				}else{
				$values = DB::table('kibbs')->leftjoin(Module::bmd().'.Ta_KIB_B as kibb','kibbs.idpemda','=','kibb.IDPemda')
				->leftjoin('racks','racks.id','=','kibbs.rack_no')
				->leftjoin('storages','storages.id','=','racks.storage')
				->leftjoin('uploads as uploadbpkb','uploadbpkb.id','=','kibbs.bpkb_file')
				->leftjoin('uploads as uploadstnk','uploadstnk.id','=','kibbs.stnk_file')
				->leftjoin('uploads as uploadphoto','uploadphoto.id','=','kibbs.photo')
				->leftjoin('users','users.id','=','kibbs.update_by')
				->select('kibbs.id','kibbs.IDPemda','kibb.merk','kibb.type','kibb.cc',
				'kibb.tgl_perolehan','kibb.nomor_rangka',
				'kibb.nomor_mesin','kibb.nomor_polisi','kibb.nomor_bpkb','kibb.harga',
				'kibb.kd_bidang','kibb.kd_unit','kibb.kd_sub','kibb.kd_upb','uploadbpkb.name as bpkb_file',
				'kibbs.merk as rack_no','kibbs.type as storage_no as storage_no','uploadstnk.name as stnk_file','uploadphoto.name as photo')
				->where([['kibb.kd_hapus','=',0],
						['kibb.kd_pemilik','=',12],
						['kibb.kd_bidang','=',$kdbidang],
						['kibb.kd_unit','=',$kdunit],
						]);
				}

		$out = Datatables::of($values)->make();
		$data = $out->getData();

		$fields_popup = ModuleFields::getModuleFields('Kibbs');
		
		for($i=0; $i < count($data->data); $i++) {
			for ($j=0; $j < count($this->listing_cols); $j++) { 
				$col = $this->listing_cols[$j];
				if($fields_popup[$col] != null && starts_with($fields_popup[$col]->popup_vals, "@")) {
					$data->data[$i][$j] = ModuleFields::getFieldValue($fields_popup[$col], $data->data[$i][$j]);
				}
				if($col == $this->view_col) {
					$data->data[$i][$j] = '<a href="'.url(config('laraadmin.adminRoute') . '/kibbs/'.$data->data[$i][0]).'">'.$data->data[$i][$j].'</a>';
				}

			}
			
			if($this->show_action) {
				$output = '';
				if(Module::hasAccess("Kibbs", "edit")) {
					$output .= '<a href="'.url(config('laraadmin.adminRoute') . '/kibbs/'.$data->data[$i][0].'/edit').'" class="btn btn-warning btn-xs" style="display:inline;padding:2px 5px 3px 5px;"><i class="fa fa-edit"></i></a>';
				}
				
				if(Module::hasAccess("Kibbs", "delete")) {
					$output .= Form::open(['route' => [config('laraadmin.adminRoute') . '.kibbs.destroy', $data->data[$i][0]], 'method' => 'delete', 'style'=>'display:inline']);
					$output .= ' <button class="btn btn-danger btn-xs" type="submit"><i class="fa fa-times"></i></button>';
					$output .= Form::close();
				}
				$data->data[$i][] = (string)$output;
			}
		}
		$out->setData($data);
		return $out;
	}
}
